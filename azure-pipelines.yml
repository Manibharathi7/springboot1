# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: Docker@2
  inputs:
    containerRegistry: 'manibharathiscn'
    repository: 'manibharathicr'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
- task: CopyFiles@2
  inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**/target/*.?(jar)'
        TargetFolder: '$(build.artifactstagingdirectory)'
    
- upload : $(Build.ArtifactStagingDirectory)
  artifact: drop
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'BFSI_LGI_DevOps_Training_POC(f3f0b402-1498-4537-9728-704a780011a0)'
    appType: 'webAppLinux'
    WebAppName: 'my-app-prakruthi'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'